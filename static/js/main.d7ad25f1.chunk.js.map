{"version":3,"sources":["components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","index.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","data","props","onSubmit","reset","this","className","s","formTitle","formText","formInput","onChange","type","pattern","title","required","formBtn","Component","ContactList","contacts","onClick","contactsList","map","id","contactsItem","contactsBtn","Filter","filterWrapp","filterTitle","filterText","filterInput","Container","children","container","protoType","PropTypes","node","isRequired","App","filter","addContact","contact","uuidv4","find","toLocaleLowerCase","alert","deleteContact","prevState","handlerFilterConacts","getFilteredContacts","normalizedContacts","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7ad25f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1JImC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formTitle\":\"ContactForm_formTitle__3wlAg\",\"formText\":\"ContactForm_formText__tf6nP\",\"formInput\":\"ContactForm_formInput__1vhaR\",\"formBtn\":\"ContactForm_formBtn__1_bCV\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = this.state;\r\n\r\n    this.props.onSubmit(data);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h1 className={s.formTitle}>Phonebook</h1>\r\n        <label>\r\n          <p className={s.formText}>Name:</p>\r\n          <input\r\n            className={s.formInput}\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <p className={s.formText}>Number:</p>\r\n          <input\r\n            className={s.formInput}\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.formBtn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.contactsItem} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            className={s.contactsBtn}\r\n            onClick={() => onClick(id)}\r\n            type=\"button\"\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={s.filterWrapp}>\r\n    <h2 className={s.filterTitle}>Contacts</h2>\r\n    <label>\r\n      <p className={s.filterText}>Find Contacts By Name</p>\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nContainer.protoType = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport Container from './components/Container';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n    filter: PropTypes.string,\r\n  };\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n\r\n    if (contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  addContact = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    contacts.find(\r\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase(),\r\n    )\r\n      ? alert(`${name} is already in conacts `)\r\n      : this.setState({\r\n          contacts: [contact, ...contacts],\r\n        });\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  handlerFilterConacts = e => {\r\n    const { value } = e.currentTarget;\r\n\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedContacts = filter.toLocaleLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(normalizedContacts),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <Container>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <Filter value={filter} onChange={this.handlerFilterConacts} />\r\n        <ContactList contacts={filteredContacts} onClick={this.deleteContact} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapp\":\"Filter_filterWrapp__3Tnr1\",\"filterTitle\":\"Filter_filterTitle__2syzW\",\"filterText\":\"Filter_filterText__30cAw\",\"filterInput\":\"Filter_filterInput__XXxw3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__oCam_\",\"contactsItem\":\"ContactList_contactsItem__39ro4\",\"contactsBtn\":\"ContactList_contactsBtn__3mW0E\"};"],"sourceRoot":""}